#version 460
#extension GL_NV_ray_tracing : require
#extension GL_GOOGLE_include_directive : require
#extension GL_EXT_nonuniform_qualifier : require

#include "../common.h"

hitAttributeNV ProcedurePayload hit;

void main() {
  const vec3 origin = gl_ObjectRayOriginNV;
  const vec3 direction = gl_ObjectRayDirectionNV;
  const float tMin = gl_RayTminNV;
  const float tMax = gl_RayTmaxNV;

  if(!isZero(direction.y)) {
    float hT = origin.y / -direction.y;
    vec3 hitPos = origin + direction * hT;
    vec3 n = (direction.y > 0) ? vec3(0, -1, 0) : vec3(0, 1, 0);
    Vertex v0, v1, v2;
    v0.position = hitPos;
    v0.normal = n;
    v0.uv = mod(v0.position.xz, 5.0) / 5.0;
    v1.position = hitPos + vec3(0, 0, 1);
    v1.normal = n;
    v1.uv = v0.uv + vec2(1, 0);
    v2.position = hitPos + vec3(1, 0, 0);
    v2.normal = n;
    v2.uv = v0.uv + vec2(0, 1);
    hit.v0 = v0;
    hit.v1 = v1;
    hit.v2 = v2;
    hit.uv = vec2(0, 0);
    reportIntersectionNV(hT, 0);
  }
}
