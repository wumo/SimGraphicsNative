#version 450
#extension GL_GOOGLE_include_directive : require
#include "wave-fft-common.h"

void main() {
  int column = int(gl_GlobalInvocationID.y);
  int row = int(gl_GlobalInvocationID.x);
  int category = int(gl_GlobalInvocationID.z) + 1;
  if(row >= N || column >= N) return;
  int id = row;
  int revId = rev[id];
  sharedData[id] = datum[dataOffset + revId * N + column].data[category];
  memoryBarrier();
  barrier();
  fft1D(id, category);
  int idx = id * N + column;
  int vIdx = positionOffset + idx;
  int nIdx = normalOffset + idx;
  float signs[] = {1.f, -1.f};
  float sign = signs[(row + column) & 1];
  float value = sharedData[id].x * sign;
  switch(category) {
    case htIdx: positions[vIdx * 3 + 1] = value; break;
    case hDxIdx: positions[vIdx * 3] = column - N / 2.f + value * choppyScale; break;
    case hDzIdx: positions[vIdx * 3 + 2] = row - N / 2.f + value * choppyScale; break;
    case slopeXIdx: normals[nIdx * 3] = -value * 10; break;
    case slopeZIdx: normals[nIdx * 3 + 2] = -value * 10; break;
  }
}